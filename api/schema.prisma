// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id                        String        @id @default(cuid())
  name                      String        @default("")
  lastName                  String        @default("")
  email                     String        @unique @default("")
  password                  String
  cart                      CartItem[]    @relation("CartItem_user")
  orders                    Order[]       @relation("Order_user")
  role                      String?
  courses                   Course[]      @relation("Course_users")
  posts                     Post[]        @relation("Post_author")
  images                    Image[]       @relation("Image_uploadedBy")
  createdAt                 DateTime?     @default(now())
  passwordResetToken        String?
  passwordResetIssuedAt     DateTime?
  passwordResetRedeemedAt   DateTime?
  from_CouponPivot_customer CouponPivot[] @relation("CouponPivot_customer")
}

model Coupon {
  id                          String        @id @default(cuid())
  code                        Int
  description                 String        @default("")
  maxAmount                   Int
  couponItem                  CouponPivot[] @relation("Coupon_couponItem")
  from_CouponPivot_couponCode CouponPivot[] @relation("CouponPivot_couponCode")
}

model CouponPivot {
  id                     String   @id @default(cuid())
  couponCode             Coupon?  @relation("CouponPivot_couponCode", fields: [couponCodeId], references: [id])
  couponCodeId           String?  @map("couponCode")
  customer               User?    @relation("CouponPivot_customer", fields: [customerId], references: [id])
  customerId             String?  @map("customer")
  status                 Int?
  from_Coupon_couponItem Coupon[] @relation("Coupon_couponItem")

  @@index([couponCodeId])
  @@index([customerId])
}

model Post {
  id                             String     @id @default(cuid())
  title                          String     @default("")
  content                        String     @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  example                        String?
  someFieldName                  String     @unique @default("1970-01-01") @map("my_date")
  author                         User?      @relation("Post_author", fields: [authorId], references: [id])
  authorId                       String?    @map("author")
  tags                           Tag[]      @relation("Post_tags")
  from_Settings_highlightedPosts Settings[] @relation("Settings_highlightedPosts")

  @@index([authorId])
}

model Course {
  id                   String     @id @default(cuid())
  name                 String     @default("")
  description          String     @default("")
  status               String?    @default("DRAFT")
  price                Int?
  users                User[]     @relation("Course_users")
  from_CartItem_course CartItem[] @relation("CartItem_course")
}

model Category {
  id                     String     @id @default(cuid())
  name                   String     @default("")
  description            String     @default("")
  parentId               Category[] @relation("Category_parentId")
  from_Category_parentId Category[] @relation("Category_parentId")
}

model Tag {
  id    String @id @default(cuid())
  name  String @default("")
  posts Post[] @relation("Post_tags")
}

model Image {
  id              String    @id @default(cuid())
  altText         String    @default("")
  image_filesize  Int?
  image_extension String?
  image_width     Int?
  image_height    Int?
  image_id        String?
  uploadedBy      User?     @relation("Image_uploadedBy", fields: [uploadedById], references: [id])
  uploadedById    String?   @map("uploadedBy")
  createdAt       DateTime? @default(now())

  @@index([uploadedById])
}

model Settings {
  id               Int    @id
  websiteName      String @default("")
  copyrightText    String @default("")
  highlightedPosts Post[] @relation("Settings_highlightedPosts")
  jobsList         String @default("[]")
}

model CartItem {
  id     String   @id @default(cuid())
  course Course[] @relation("CartItem_course")
  user   User?    @relation("CartItem_user", fields: [userId], references: [id])
  userId String?  @map("user")

  @@index([userId])
}

model Order {
  id     String      @id @default(cuid())
  total  Int?
  items  OrderItem[] @relation("OrderItem_order")
  user   User?       @relation("Order_user", fields: [userId], references: [id])
  userId String?     @map("user")
  charge String      @default("")

  @@index([userId])
}

model OrderItem {
  id          String  @id @default(cuid())
  name        String  @default("")
  description String  @default("")
  price       Int?
  quantity    Int?
  order       Order?  @relation("OrderItem_order", fields: [orderId], references: [id])
  orderId     String? @map("order")

  @@index([orderId])
}
