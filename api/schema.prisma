// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id                      String    @id @default(cuid())
  name                    String    @default("")
  lastName                String    @default("")
  email                   String    @unique @default("")
  password                String
  status                  String?   @default("enable")
  cart                    Cart[]    @relation("Cart_user")
  orders                  Order[]   @relation("Order_user")
  role                    String?   @default("100")
  courses                 Course[]  @relation("Course_users")
  events                  Event[]   @relation("Event_users")
  posts                   Post[]    @relation("Post_author")
  comments                Comment[] @relation("Comment_user")
  createdAt               DateTime? @default(now())
  passwordResetToken      String?
  passwordResetIssuedAt   DateTime?
  passwordResetRedeemedAt DateTime?
}

model Teacher {
  id              String   @id @default(cuid())
  name            String   @default("")
  description     String   @default("")
  image_filesize  Int?
  image_extension String?
  image_width     Int?
  image_height    Int?
  image_id        String?
  courses         Course[] @relation("Course_teacher")
}

model Coupon {
  id                   String     @id @default(cuid())
  code                 String     @default("")
  description          String     @default("")
  maxAmount            Int
  belongsTo            Course[]   @relation("Coupon_belongsTo")
  discount             Int?
  from_CartItem_coupon CartItem[] @relation("CartItem_coupon")
}

model Event {
  id                   String      @id @default(cuid())
  name                 String      @default("")
  image_filesize       Int?
  image_extension      String?
  image_width          Int?
  image_height         Int?
  image_id             String?
  description          String      @default("")
  content              String      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  price                Int?
  maxAmount            Int
  status               String?     @default("DRAFT")
  from                 String?
  to                   String?
  registrationDeadline String?
  location             String      @default("")
  users                User[]      @relation("Event_users")
  from_CartItem_event  CartItem[]  @relation("CartItem_event")
  from_OrderItem_event OrderItem[] @relation("OrderItem_event")
}

model Post {
  id                             String     @id @default(cuid())
  title                          String     @default("")
  content                        String     @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  example                        String?
  someFieldName                  String     @unique @default("1970-01-01") @map("my_date")
  author                         User?      @relation("Post_author", fields: [authorId], references: [id])
  authorId                       String?    @map("author")
  tags                           Tag[]      @relation("Post_tags")
  from_Settings_highlightedPosts Settings[] @relation("Settings_highlightedPosts")

  @@index([authorId])
}

model Course {
  id                    String       @id @default(cuid())
  name                  String       @default("")
  description           String       @default("")
  status                String?      @default("DRAFT")
  price                 Int?
  teacher               Teacher?     @relation("Course_teacher", fields: [teacherId], references: [id])
  teacherId             String?      @map("teacher")
  image_filesize        Int?
  image_extension       String?
  image_width           Int?
  image_height          Int?
  image_id              String?
  comments              Comment[]    @relation("Comment_course")
  users                 User[]       @relation("Course_users")
  courseItem            CourseItem[] @relation("CourseItem_course")
  from_Coupon_belongsTo Coupon[]     @relation("Coupon_belongsTo")
  from_CartItem_course  CartItem[]   @relation("CartItem_course")
  from_OrderItem_course OrderItem[]  @relation("OrderItem_course")

  @@index([teacherId])
}

model CourseItem {
  id          String    @id @default(cuid())
  no          Int?
  name        String    @default("")
  description String    @default("")
  video       File?     @relation("CourseItem_video", fields: [videoId], references: [id])
  videoId     String?   @map("video")
  course      Course?   @relation("CourseItem_course", fields: [courseId], references: [id])
  courseId    String?   @map("course")
  comments    Comment[] @relation("Comment_courseItem")

  @@index([videoId])
  @@index([courseId])
}

model Category {
  id                     String     @id @default(cuid())
  name                   String     @default("")
  description            String     @default("")
  priority               Int?       @default(0)
  parentId               Category[] @relation("Category_parentId")
  from_Category_parentId Category[] @relation("Category_parentId")
}

model Tag {
  id    String @id @default(cuid())
  name  String @default("")
  posts Post[] @relation("Post_tags")
}

model File {
  id                    String       @id @default(cuid())
  altText               String       @default("")
  video_filesize        Int?
  video_filename        String?
  type                  String?
  createdAt             DateTime?    @default(now())
  from_CourseItem_video CourseItem[] @relation("CourseItem_video")
}

model Settings {
  id               Int    @id
  websiteName      String @default("")
  copyrightText    String @default("")
  highlightedPosts Post[] @relation("Settings_highlightedPosts")
  jobsList         String @default("[]")
}

model CartItem {
  id       String  @id @default(cuid())
  course   Course? @relation("CartItem_course", fields: [courseId], references: [id])
  courseId String? @map("course")
  event    Event?  @relation("CartItem_event", fields: [eventId], references: [id])
  eventId  String? @map("event")
  quantity Int?    @default(1)
  coupon   Coupon? @relation("CartItem_coupon", fields: [couponId], references: [id])
  couponId String? @map("coupon")
  cart     Cart?   @relation("CartItem_cart", fields: [cartId], references: [id])
  cartId   String? @map("cart")

  @@index([courseId])
  @@index([eventId])
  @@index([couponId])
  @@index([cartId])
}

model Cart {
  id          String     @id @default(cuid())
  items       CartItem[] @relation("CartItem_cart")
  user        User?      @relation("Cart_user", fields: [userId], references: [id])
  userId      String?    @map("user")
  isCompleted Boolean    @default(false)

  @@index([userId])
}

model Order {
  id            String      @id @default(cuid())
  totalCost     Float?
  items         OrderItem[] @relation("OrderItem_order")
  trackId       String      @default("")
  user          User?       @relation("Order_user", fields: [userId], references: [id])
  userId        String?     @map("user")
  paymentStatus Int?        @default(0)
  orderDate     DateTime?   @default(now())

  @@index([userId])
}

model OrderItem {
  id          String  @id @default(cuid())
  name        String  @default("")
  description String  @default("")
  course      Course? @relation("OrderItem_course", fields: [courseId], references: [id])
  courseId    String? @map("course")
  event       Event?  @relation("OrderItem_event", fields: [eventId], references: [id])
  eventId     String? @map("event")
  quantity    Int?    @default(1)
  price       Int?
  order       Order?  @relation("OrderItem_order", fields: [orderId], references: [id])
  orderId     String? @map("order")

  @@index([courseId])
  @@index([eventId])
  @@index([orderId])
}

model Comment {
  id           String      @id @default(cuid())
  comment      String      @default("")
  user         User?       @relation("Comment_user", fields: [userId], references: [id])
  userId       String?     @map("user")
  course       Course?     @relation("Comment_course", fields: [courseId], references: [id])
  courseId     String?     @map("course")
  courseItem   CourseItem? @relation("Comment_courseItem", fields: [courseItemId], references: [id])
  courseItemId String?     @map("courseItem")
  isValidated  Boolean     @default(true)
  rate         Int?        @default(-1)
  createdAt    DateTime?   @default(now())

  @@index([userId])
  @@index([courseId])
  @@index([courseItemId])
}
